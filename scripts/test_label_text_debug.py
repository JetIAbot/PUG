"""
Script espec√≠fico para verificar que el TEXTO de los labels sea visible
"""

import requests
from bs4 import BeautifulSoup
import re

def test_label_text_visibility():
    """Verificar que el texto espec√≠fico de los labels sea visible"""
    print("üîç VERIFICANDO TEXTO ESPEC√çFICO DE LABELS")
    print("=" * 60)
    
    # P√°gina de administradores
    print("\nüìã P√ÅGINA DE ADMINISTRADORES:")
    try:
        response = requests.get("http://127.0.0.1:5000/admin/login")
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            content = response.text
            
            # Verificar presencia del texto espec√≠fico
            if 'Usuario Administrador' in content:
                print("‚úÖ Texto 'Usuario Administrador' presente en HTML")
            else:
                print("‚ùå Texto 'Usuario Administrador' NO presente en HTML")
            
            if 'Contrase√±a de Administrador' in content:
                print("‚úÖ Texto 'Contrase√±a de Administrador' presente en HTML")
            else:
                print("‚ùå Texto 'Contrase√±a de Administrador' NO presente en HTML")
            
            # Verificar estructura con span
            if '<span class="label-text">' in content:
                print("‚úÖ Estructura con span.label-text implementada")
            else:
                print("‚ùå Estructura con span.label-text NO implementada")
            
            # Verificar CSS espec√≠fico
            if 'label-text' in content and 'color: #2c3e50' in content:
                print("‚úÖ CSS espec√≠fico para label-text aplicado")
            else:
                print("‚ö†Ô∏è CSS espec√≠fico para label-text no detectado")
                
    except Exception as e:
        print(f"‚ùå Error verificando admin: {e}")
    
    # P√°gina de estudiantes
    print("\nüë®‚Äçüéì P√ÅGINA DE ESTUDIANTES:")
    try:
        response = requests.get("http://127.0.0.1:5000/")
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            content = response.text
            
            # Verificar presencia del texto espec√≠fico
            if 'N√∫mero de Matr√≠cula' in content:
                print("‚úÖ Texto 'N√∫mero de Matr√≠cula' presente en HTML")
            else:
                print("‚ùå Texto 'N√∫mero de Matr√≠cula' NO presente en HTML")
            
            if 'Contrase√±a' in content:
                print("‚úÖ Texto 'Contrase√±a' presente en HTML")
            else:
                print("‚ùå Texto 'Contrase√±a' NO presente en HTML")
            
            # Verificar estructura con span
            if '<span class="label-text">' in content:
                print("‚úÖ Estructura con span.label-text implementada")
            else:
                print("‚ùå Estructura con span.label-text NO implementada")
                
    except Exception as e:
        print(f"‚ùå Error verificando estudiantes: {e}")

def test_css_specific_rules():
    """Verificar reglas CSS espec√≠ficas para label-text"""
    print("\nüé® VERIFICANDO CSS ESPEC√çFICO:")
    try:
        # Verificar admin
        response = requests.get("http://127.0.0.1:5000/admin/login")
        if response.status_code == 200:
            content = response.text
            
            css_rules = [
                '.label-text',
                'background-color: rgba(255,255,255,0.8)',
                'text-shadow: 0 1px 2px rgba(0,0,0,0.1)',
                'font-weight: 700'
            ]
            
            for rule in css_rules:
                if rule in content:
                    print(f"‚úÖ Regla CSS '{rule}' encontrada")
                else:
                    print(f"‚ùå Regla CSS '{rule}' no encontrada")
                    
    except Exception as e:
        print(f"‚ùå Error verificando CSS: {e}")

def extract_label_html():
    """Extraer el HTML exacto de los labels para debug"""
    print("\nüî¨ ESTRUCTURA HTML DE LABELS:")
    try:
        response = requests.get("http://127.0.0.1:5000/admin/login")
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # Encontrar todos los labels
            labels = soup.find_all('label', class_='form-label')
            
            for i, label in enumerate(labels, 1):
                print(f"\nLabel {i}:")
                print(f"HTML: {label}")
                print(f"Texto visible: '{label.get_text().strip()}'")
                
                # Verificar si tiene span
                span = label.find('span', class_='label-text')
                if span:
                    print(f"Span encontrado: '{span.get_text().strip()}'")
                else:
                    print("Sin span label-text")
                    
    except Exception as e:
        print(f"‚ùå Error extrayendo HTML: {e}")

def main():
    """Funci√≥n principal"""
    test_label_text_visibility()
    test_css_specific_rules()
    extract_label_html()
    
    print("\n" + "=" * 60)
    print("üéØ RESUMEN DE CORRECCIONES APLICADAS:")
    print("1. ‚úÖ Texto envuelto en <span class='label-text'>")
    print("2. ‚úÖ CSS espec√≠fico para .label-text")
    print("3. ‚úÖ Fondo semitransparente para labels")
    print("4. ‚úÖ Text-shadow para mejor legibilidad")
    print("5. ‚úÖ Font-weight 700 (extra negrilla)")
    print("\nüåê Verifica visualmente en:")
    print("- Admin: http://127.0.0.1:5000/admin/login")
    print("- Estudiantes: http://127.0.0.1:5000/")

if __name__ == "__main__":
    main()
